#!/bin/sh
#Save all scripts to ~/database/pipeline_script
# Script template is ./template 

dotime=1;starts=`date +%s` ; starttime=`date`
do1=0   #=1: Use first line/protein to count percentage. =0: Use both
ncbi=0  #=1: alignment is from NCBI
thisfile=$0
header=1

oldline=$*   #all argvs
#echo $0 $oldline
if [ -n "$1" ] ; then
 aaa=`echo "$1" | awk '{print substr($1,1,1)}'`  #check if first input is -XXX
 while [ $aaa == "-" ] ; do
  case $1 in
   -nohead)header=0;shift;;
   -2) do1=2; shift;;
   -1) do1=1; shift;;
   -ncbi)ncbi=1;shift;;
   *) $0; echo "***Fatal error @ $0! Argument $1 is unrecoginized and ignored : $0 $oldline!" 1>&2 ; exit;;
  esac
  [ -n "$1" ] && aaa=`echo "$1" | awk '{print substr($1,1,1)}'` || aaa='NA'
 done
fi

if [ -n "$1" ] ; then
 input=$1
else
cat << ttt
 Calculate identity percentage from Clustal alignment file obtained from http://www.ebi.ac.uk/Tools/clustalw2/index.html?
   Will not count resname as: x X . - or empty space
    or NCBI Blastp website
     Format of NCBI Alignement file:
    ...
Query  177  EVPQIDVPNLKPIFGIPLADAVERTMMYDGIRLPAVFRECIDYVEKYGMKCEGIYRVSGI  236
             VP    P+LK I  +   D       ++  R P V   CI  +E  G+K EG+YRVSG
Sbjct  257  HVPNDCQPDLKRIKKVYCCDLTTLVKAHNTQR-PMVVDICIREIEARGLKSEGLYRVSGF  315

 Format of Clustalw_Alignment file:
CLUSTAL 2.1 multiple sequence alignment


RLIP76          HKEEKHKEKKSKDLTAADVVKQWKEKKKKKKPIQEPEVPQIDVPNLKPIFGIPLADAVER
1XA6            --------------------VRCSDCGLNVHKQCSKHVPNDCQPDLKRIKKVYCCDLTTL
                                     : .:   : :   . .**:   *:** *  :  .* .

 Usage: $0 [Options] Clustal_Alignment file
 Options:
  -nohead : input clustal align file has no header
   [default] : the first 3 lines are header to bypass
  -1: Use first line/protein to count percentage only
  -2: Use 2nd line/protein to count percentage only
  -ncbi : alignment is from NCBI, not default Clustal

 Example: 
      $0 RecB_DNA2-1.clustalw 
        #Alignment file is from Clustal
      $0 -ncbi RecB_DNA2.ncbi
        #Alignment file is from NCBI, which could be better

  NOTE: NCBI alignment could be better than Clustal alignment. See ./alignment_ncbi2clustal ./web_blast.pl
    Can adjust blastp parameter to find more homology when identity is low. See ARI1/
  NOTE: To use EBI Clustal to align seq file, run ./clustal_seq_align    
  NOTE: WebLogo can do multiple seq alignment and display it in different way (high ide with larger letter): https://weblogo.berkeley.edu/logo.cgi

ttt
  exit
fi

infile=`echo $input | awk '{l=length($1)-3;if(substr($1,l,4)==".pdb"){print substr($1,1,l-1)}else{print $1}}'`
temp=$0'_'$$'.tmp';  temp2=$temp'2' ; temp3=$temp'3' ; temp4=$temp'4'; temp5=$temp'5'; temp6=$temp'6'

#Check root folder: scalemp1=p-gpu1; p-ngs=hpc
ed='/home/holi/database/pipeline_script/'
drd='/home/holi/database/pipeline_script/'; [ -d $drd ] && ed=$drd  #My old computer
drd='/flower_data/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@scalemp1
drd='/isi-dcnl/flower_data/hongzhi/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@p-ngs2
drd='/isi-flower/flower_data/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@p-gpu1
drd='/net/isi-dcnl/ifs/user_data/hongzhi/database/pipeline_script/'; [ -d $drd ] && ed=$drd ##holi@hpc-access1.coh.org
drd='/home/holi/database/pipeline_script/'; [ -d $drd ] && ed=$drd  #My newest computer

thisfolder=`pwd`; thisfolder=$thisfolder'/'
if [ $thisfolder != $ed ] ; then
 cp -f $ed/back $ed/get $ed/alignment_ncbi2clustal .
fi

if [ $ncbi -eq 1 ] ; then
 ./alignment_ncbi2clustal -out $temp $input
 input=$temp
fi

cat $input | awk 'BEGIN{s=0;s1=0;n1=0;n2=0;c1=0;c2=0;c3=0;g1=0;g2=0;do1='$do1';head='$header'}
{if(NR>(3*head)&&NF==3){s=1};if(s==1&&NF>=1){s1++};
 if(s==1&&NF==0){s1=0;for(i=1;i<=999;i++){w[i]=1}}  #empty line for a block (NF=0)
 if(s1==1){if(NF!=3){print "Error line1: ",$_};fn=$1;a=$2;na=split(a,d,"-");idx=index($_,$2)
  for(i=1;i<=length(a);i++){x=substr(a,i,1);if(tolower(x)!="x"&&x!="."&&x!="-"&&x!=" "){n1++}else{w[i]=0}}
  #for(i=1;i<=na;i++){n1=n1+length(d[i])} #old before 2020/2
 }  #count line1
 if(s1==1){na=length($2);for(i=1;i<=na;i++){a=substr($2,i,1);if(a=="-"){g1++}}}  #count line1 for gap
 if(s1==2){if(NF!=3){print "Error line2: ",$_};fn2=$1;a=$2;na=split(a,d,"-");
  for(i=1;i<=length(a);i++){x=substr(a,i,1);if(tolower(x)!="x"&&x!="."&&x!="-"&&x!=" "){n2++}else{w[i]=0}}
  #for(i=1;i<=na;i++){n2=n2+length(d[i])} #old before 2020/2
 }  #count line2
 if(s1==2){na=length($2);for(i=1;i<=na;i++){a=substr($2,i,1);if(a=="-"){g2++}}}  #count line2
 if(s1>=3){na=length($_);for(i=1;i<=na;i++){v=i-idx+1;a=substr($_,i,1);if(a=="*"){if(w[v]==1){c1++}};
  if(a==":"){if(w[v]==1){c2++}};if(a=="."){if(w[v]==1){c3++}}}}  #count from line3 for consensus line
}END{
 print "Total residues in first protein =", n1
 print "Total residues in second protein =", n2
 if(do1==2){print "=> Use 2nd protein (",fn2,") to calculate percentage:", n1=n2;g1=g2}else{print "=> Use first protein (",fn,") to calculate percentage:"} 
 printf(" Identity = %5.2f % (%d)\n",c1/n1*100,c1)
 printf("        : = %5.2f % (%d)\n",c2/n1*100,c2)
 printf("        . = %5.2f % (%d)\n",c3/n1*100,c3)
 printf("      Sum = %5.2f % (%d)\n",(c3+c2+c1)/n1*100,c3+c2+c1)
 printf("      Gap = %5.2f % (%d)\n",g1/n1*100,g1)
 if(do1==0){print " ";print "=> Use 2nd protein (",fn2,") to calculate percentage:", n1=n2;g1=g2
  printf(" Identity = %5.2f % (%d)\n",c1/n1*100,c1)
  printf("        : = %5.2f % (%d)\n",c2/n1*100,c2)
  printf("        . = %5.2f % (%d)\n",c3/n1*100,c3)
  printf("      Sum = %5.2f % (%d)\n",(c3+c2+c1)/n1*100,c3+c2+c1)
  printf("      Gap = %5.2f % (%d)\n",g1/n1*100,g1)
 }
}'

rm -f $temp $temp2 $temp3 $temp4 $temp5 $temp6; exit
