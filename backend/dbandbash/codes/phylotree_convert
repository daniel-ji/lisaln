#!/bin/sh
#Save all scripts to ~/database/pipeline_script   Script template is ./template 

dotime=1;starts=`date +%s` ; starttime=`date`

thisfile=$0
doout=0
debug=0
doclean=1
doname=0
cutname=0

oldline=$*   #all argvs
oldline1=`awk -v ins="$oldline" 'BEGIN{n=split(ins,a," ");for(i=1;i<n;i++){printf("%s ",a[i])}}'` #remove last argv
if [ -n "$1" ] ; then
 aaa=`echo "$1" | awk '{print substr($1,1,1);exit}'`  #check if first input is -XXX
 while [ "$aaa" == "-" ] ; do
  case $1 in
   -debug) debug=1; shift;;
   -noclean)doclean=0;shift;;
   -name)doname=1;namefile=$2;shift 2;;
   -out) output="$2"; doout=1;shift 2;;  #Use "$2" to pass argments with blank space inside as d='a b c''
   -cutname)cutname=1;shift;;
   *) $0; echo "***Fatal error @ $0! Argument $1 is unrecoginized and ignored : $0 $oldline!" 1>&2 ; exit;;
  esac
  [ -n "$1" ] && aaa=`echo "$1" | awk '{print substr($1,1,1)}'` || aaa='NA'
 done
fi
[ $debug -eq 1 ] && echo $0 $oldline

if [ -n "$1" ] ; then 
 input="$1"
 if [ -n "$2" ] ; then
  output=$2; doout=1
 fi
else
cat << ttt
    ****NOTE: Copyright belongs to Dr. Hongzhi Li *******

 Convert phylogenetic tree from Clustral aln into dendogram format for ./gnuplot_dendogram display
 This has been tested as same phylogenetic tree from Clustral Website as in Nuclease/
   But order of proteins are different

 Format of Clustral phylogenetic tree : see ~/Nuclease/nuclease_purepdb_aln_phylotree.ph
  produced from ./clustal_seq_align

dendogram format: See Nuclease/nuclease_pure_RMSD_clu1.xls
  Rank | Name | Level 1 Cluster Rank | L2 Cluster | ...
Rank Name 0.4 0.8 0.9 1.0
0 QQ  1 1 1 1
1 PP  1 1 1 1
2 AA  1 1 1 1
3 BCD 1 1 1 1
4 CCC 2 1 1 1
5 DD  3 2 1 1
6 E   3 2 1 1
7 F   4 2 1 1
8 GGG 4 2 1 1
9 TTT 5 3 2 2


 Usage: $0 [Options] Input
 Options:
  -debug : debug model on
  -out Output : User defined output for dendogram file
  -noclean : will not clean input tree file
  -name Namefile : will append current level to previous dendo file
  -cutname : Only display name before _, such as FEN1_HUMAN, only display FEN1 [default: will display as FEN1-HUMAN]

 Example: $0  nuclease_purepdb_aln_phylotree.ph
    #Tested in Nuclease/

 NOTE: iTOL can plot unrooted phylogenetic tree of kinase or others: https://itol.embl.de/
 NOTE: called by ./clustal_seq_align 

ttt
  exit
fi

extension=`echo $input | awk '{n=split($1,a,".");printf(".%s",a[n])}'`
infile=`echo $input | awk '{l=length($1)-3;a=substr($1,l,4);if(a==".pdb"){print substr($1,1,l-1)}else{print $1}}'`
infile=`echo $input | awk '{n=split($1,a,".");printf("%s",a[1]);for(i=2;i<n;i++){printf(".%s",a[i])}}'`
#infile=`basename $input ${extension}`
[ $doout -ne 1 ] && output=$infile'_dendo.xls'

#FATAL WARNing: NEVER delete following temp files! Otherwise last line will erase all files * in folder
# Not recommend to define temp=$0'_'$$'.tmp'  as temp has ./ ahead which may cause trouble when re-use it to define temp file name
temp=$$'.tmp';  temp2=$temp'2' ; temp3=$temp'3' ; temp4=$temp'4'; temp5=$temp'5'; temp6=$temp'6'

#Check root folder: scalemp1=p-gpu1; p-ngs=hpc
ed='/home/holi/database/pipeline_script/'
drd='/home/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd  #My old computer
drd='/isi-dcnl/flower_data/hongzhi/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@p-ngs2
drd='/isi-flower/flower_data/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@p-gpu1
drd='/net/isi-dcnl/ifs/user_data/hongzhi/database/pipeline_script/'; [ -d $drd ] && ed=$drd ##holi@hpc-access1.coh.org
drd='/flower_data/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@scalemp1
drd='/home/holi/database/pipeline_script/'; [ -d $drd ] && ed=$drd  #My newest computer
thisfolder=`pwd`; thisfolder=$thisfolder'/'
if [ $thisfolder != $ed ] ; then
 cp -f $ed/back $ed/get $ed/gnuplot_dendogram .
fi

[ $debug -eq 1 ] && echo "Convert Clustral phylogenetic tree $input into dendogram format saved in $output"
inputo=$input

#Culstral phy tree: Nuclease/nuclease_purepdb_aln_phylotree.ph
#(
#(
#sp|Q97TX9|CAS4_SACS2:0.13940,
#sp|Q6P1N9|TATD1_HUMAN:-0.13940)
#:0.17443,
#sp|P27695|APEX1_HUMAN:0.24021)
#:0.06233,
#:0.00989);

#Remove :0.17443, and :0.06233,  But keep ) as in :0.00989); and :0.20557)
if [ $doclean -eq 1 ] ; then
 awk '{if(substr($1,1,1)!=":"){print $_}else{if(index($1,")")>0){print ")"}}}' $input > $temp.in
 input=$temp.in
fi

#Generate initial nameFile for dendo: Modify here for dendo displayed names
grep ':' $input | awk '{n=split($_,a,":");if(a[1]!=""){k++;printf("%s\t%s\n",k,a[1])}}' > $temp.name
nname=`wc -l $temp.name | awk '{print $1}'`
if [ $nname -le 1 ] ; then
 rm -f $temp*
 exit  #exit recusive call
fi 

if [ $doname -eq 0 ] ; then
 echo "$nname proteins in phylogenetic tree"
 namefile=$temp.name
fi

#cat $namefile
#Only names, no value:
#sp|P39748|FEN1_HUMAN

#Remove last one level of () and keep first record only
nameout=$temp.name2  #dendoplot file
awk 'BEGIN{
 file="'$namefile'";  n=0
 while ((getline line < file) > 0) {
  n++; nf=split(line,d," "); rk[n]=d[1];na[n]=d[2];full[n]=line;nline=nf;last[n]=d[nf]
  #print n,na[n]
 }
 close(file)
 outfile="'$nameout'"
 printf("") > outfile
}
{
 #For first level protein cluster for dendograph
 if(s==1){
  if($1!="("){
   m++
   len=length($_)
   if($1==")"){  #only ) in line, use last as name
    a[m]=a[m-1]
   }else{ #as name), remove )
    a[m]=substr($_,1,len-1)
   }
   if(substr($_,len,1)==")"){
    rank++
    for (i=1;i<=m;i++){
     pused=0
     if(i==1){pused=1}  #first protein in cluster 
     accu++
     split(a[i],onlyname,":")
     pna[accu]=onlyname[1]; #remove value :0.3762 from name
     prk[accu]=rank; puse[accu]=pused
     #print accu, pna[accu] , prk[accu], puse[accu] 
    }
    s=0;m=0
   }
  }
 }

 if(substr($1,1,1)=="("){
  s=1;m=0;a[m]=$_;
  if(a[m]!="("){print "Error: should be ( only, but this line is: ", a[m]}
 }

 if(substr($1,1,1)!=":"&&index($1,":")>0){  #Count proteins: sp|Q9NSU2|TREX1_HUMAN:0.01549,
  nprotein++
  split($1,x,":")  
  proteiname[nprotein]=x[1]
 }

 p++;pp[p]=$_

}END{

 #Print out first level protein cluster for dendograph to outfile
 newrank=0
 for(i=1;i<=n;i++){
  did=0
  for(j=1;j<=accu;j++){
   #if(j==1){print pna[j], na[i]}
   if(pna[j]==na[i]){
    did=1;newrank=newrank+puse[j]
    if(puse[j]==1){  #first protein in cluster
     newr[i]=newrank
     nnnew[prk[j]]=newrank
    }else{
     newr[i]=nnnew[prk[j]] #Others use same rank as first protein
    }   
   }
  }   
  if(did==0){
   hasit=0
   for(z=1;z<=nprotein;z++){
    if(proteiname[z]==na[i]){hasit=1;break}
   }
   if(hasit==1){  #This protein name is in current list
    newrank++;newr[i]=newrank
   } else {  #If not, use rank as of the first protein
    for(z=1;z<i;z++){
      if(last[z]==last[i]){newr[i]=newr[z]} 
    }
   }
  }
  #print na[i]
  printf("%s\t%s\n",full[i],newr[i]) >> outfile
 }

 #remove first level cluster proteins and only keep first protein in this cluster level
 k=0;did=0
 for (i=1;i<=p;i++){
  #print "hahaha",i,pp[i]
  if(pp[i]=="("){
   prei=i;
   #print "hahaha",prei,k
   for(j=1;j<=k;j++){print t[j] }  #print everything before this (
   k=0;did=0
  }
  k++;t[k]=pp[i]
  len=length(pp[i])  
  if(substr(pp[i],len,1)==")"||substr(pp[i],len-1,2)==");"){ #end as ) or );
   #print "hahaha",k
   if (did==0){
    #only print prei+1 protein name
    got=pp[prei+1]
    lent=length(got)
    if(substr(got,lent,1)==")"){print substr(got,1,lent-1)}  #end as ) : sp|P56282|DPOE2_HUMAN:0.40217)
    else{
     if(substr(got,lent-1,2)==");"){   #end as ): : sp|O60930|RNH1_HUMAN:0.41196);
      print substr(got,1,lent-2)
     }else{
      print got
     }
    }
    did=1
    k=k-(i-prei+1)  #do not display this i-prei+1 lines again
    #print "hahaha",got,k,prei,i
   }
  }
 }
 #print last parts
 for(j=1;j<=k;j++){
   print t[j] 
 }

}' $input > $temp.out

[ $debug -eq 1 ] && cat $nameout  #This first level of dendogram works! But $temp.out to remove neighboring () NOT done 
[ $debug -eq 1 ] && cat $temp.out

grep 'Error' $temp.out
nerr=`grep 'Error' $temp.out | wc -l | awk '{print $1}'`
if [ $nerr -gt 0 ] ; then
 echo "Fatal error @$0 $oldline : $inputo format is not correct as phylo tree. See ~/Nuclease/nuclease_purepdb_aln_phylotree.ph" 1>&2
 rm $temp.* ; exit
fi

#if [ $doname -eq 1 ] ; then
# cp $nameout $output
# echo "Test exit for two round" ; exit
#fi

cp $nameout $output

#recursively call
$0 -noclean -name $nameout -out $output $temp.out

if [ $doname -eq 0 ] ; then
#deodogram
 awk 'BEGIN{print "Rank Protein ClusterLevel"}{
 n=split($2,a,"|");
 ful=a[2]  #for pdb|4LXL|A case
 if(substr($2,1,3)=="sp|"){ful=a[n]}
 split(ful,b,"_");
 if(n==1){b[1]=$2}  #For Human case, no |, use original name
 if('$cutname'==1){  #For FEN1_HUMAN, only display first FEN1
  split(b[1],u,"_");b[1]=u[1]
 }else{
  b[1]=gensub(/_/,"-","g",b[1]) #replace _ to - for better display 
 }
 printf("%s\t%s\t",$1,b[1]);
 for(i=3;i<=NF;i++){printf("%s\t",$i)};printf("\n")}' $output > $temp.plot  #simplify name sp|Q17RS7|GEN_HUMAN to GEN and add header
 dostepc=0
 clusterout=$output'_dendo.xls'
 title='Phylogenetic Tree'
 mv $temp.plot $output
 #cat $output
 echo "=> Dendograph for phylogenetic tree is $output" 
 if [ $dostepc -eq 1 ] ; then
  ./gnuplot_dendogram -digit 0 -list "$lists" -title "$title" -y $others2 $rank -clusterout $clusterout  $output >& $temp
 else
  ./gnuplot_dendogram -digit 0 -title "$title" -y $others2 $rank -clusterout $clusterout  $output >& $temp
 fi
fi


if [ "$temp" == "" ] ; then
 echo "FATAL error: temp files are NOT defined: all files in folder could be erased!!! Rewrite $0 script";exit
fi
rm -f $temp* $temp2* $temp3* $temp4* $temp5* $temp6* ; exit  #Do NOT use rm -rf will may delete subfolders

