#!/bin/sh
#Save all scripts to ~/database/pipeline_script   Script template is ./template 

dotime=1;starts=`date +%s` ; starttime=`date`

thisfile=$0
doout=0
debug=0
cname=0;display=1;head=0;dosort=0;ncol=1
space=2 #space between col 1 and 2

oldline=$*   #all argvs
oldline1=`awk -v ins="$oldline" 'BEGIN{n=split(ins,a," ");for(i=1;i<n;i++){printf("%s ",a[i])}}'` #remove last argv
if [ -n "$1" ] ; then
 aaa=`echo "$1" | awk '{print substr($1,1,1);exit}'`  #check if first input is -XXX
 while [ "$aaa" == "-" ] ; do
  case $1 in
   -debug) debug=1; shift;;
   -out) output="$2"; doout=1;shift 2;;  #Use "$2" to pass argments with blank space inside as d='a b c''
   -change)cname=1;shift;;
   -display)display=1;shift;;
   -nodisplay)display=0;shift;;
   -head)head=$2;shift;;
   -space)space=$2;shift 2;;
   -sort)dosort=1;sortf=$2;shift 2;;
   -col)ncol=$2;shift 2;;
   *) $0; echo "***Fatal error @ $0! Argument $1 is unrecoginized and ignored : $0 $oldline!" 1>&2 ; exit;;
  esac
  [ -n "$1" ] && aaa=`echo "$1" | awk '{print substr($1,1,1)}'` || aaa='NA'
 done
fi
[ $debug -eq 1 ] && echo $0 $oldline

if [ -n "$1" ] ; then 
 input="$1"
 input2="$2"
else
cat << ttt
    ****NOTE: Copyright belongs to Dr. Hongzhi Li *******

 Merge two align file
 Will append 2nd file before Consensus line of first file

ARID3A           RIPIMAKQVLD  271
ARID3B           RIPIMAKQILD  248
Consensus        :* :.:: **


 Blastp output can be from ./NCBI_blast, or manually save text format from balstp website
 Example can be ARI1/ARI1A.fasta_blastp_refseq_protein.txt

ALIGNMENTS
>NP_006006.3 AT-rich interactive domain-containing protein 1A isoform a [Homo
sapiens]
Length=2285

 Score = 4586 bits (11894),  Expect = 0.0, Method: Compositional matrix adjust.
 Identities = 2285/2285 (100%), Positives = 2285/2285 (100%), Gaps = 0/2285 (0%)

Query  1     MAAQVAPAAASSLGNPPPPPPSELKKAEQQQREEAGGEAAAAAAAERGEMKAAAGQESEG  60
             MAAQVAPAAASSLGNPPPPPPSELKKAEQQQREEAGGEAAAAAAAERGEMKAAAGQESEG
Sbjct  1     MAAQVAPAAASSLGNPPPPPPSELKKAEQQQREEAGGEAAAAAAAERGEMKAAAGQESEG  60



 Usage: $0 [Options] Input1 Input2
  Will append 2nd file before Consensus line of first file
  Can also sort by -sort
  Use Consensus line of first file
 Options:
  -debug : debug model on
  -out Output : User defined output
  -nodisplay | [-display] : No display output
  X-nohead : will not add header for format at firstline of output
  X-change : change some species name to easy reading human, mouse, etc.

  -space SpaceNum : space between col 1 and 2 [$space] 
  -head HeadLines : header lines in input [default]: auto-check
  -sort SortFile : sort output align order by $ncol col of SortFile
   -col ColNum : col num of sort file

 Example: 
  $0 A.aln B.aln
  $0 -sort species_mapping.txt A.aln B.aln
    #also sort protein order by col 1 in species_mapping.txt
   
 NOTE: Now can only merge two aligned files with ONE block!
 NOTE: results may NOT right when there are hyphens in input aln

ttt
  exit
fi

extension=`echo $input | awk '{n=split($1,a,".");printf(".%s",a[n])}'`
infile=`echo $input | awk '{l=length($1)-3;a=substr($1,l,4);if(a==".pdb"){print substr($1,1,l-1)}else{print $1}}'`
infile=`echo $input | awk '{n=split($1,a,".");printf("%s",a[1]);for(i=2;i<n;i++){printf(".%s",a[i])}}'`
#infile=`basename $input ${extension}`
[ $doout -ne 1 ] && output=$infile'_merge.txt'

#FATAL WARNing: NEVER delete following temp files! Otherwise last line will erase all files * in folder
# Not recommend to define temp=$0'_'$$'.tmp'  as temp has ./ ahead which may cause trouble when re-use it to define temp file name
temp=$$'.tmp';  temp2=$temp'2' ; temp3=$temp'3' ; temp4=$temp'4'; temp5=$temp'5'; temp6=$temp'6'

#Check root folder: scalemp1=p-gpu1; p-ngs=hpc
ed='/home/holi/database/pipeline_script/'
drd='/home/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd  #My old computer
drd='/isi-dcnl/flower_data/hongzhi/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@p-ngs2
drd='/isi-flower/flower_data/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@p-gpu1
drd='/net/isi-dcnl/ifs/user_data/hongzhi/database/pipeline_script/'; [ -d $drd ] && ed=$drd ##holi@hpc-access1.coh.org
drd='/flower_data/hongzhili/database/pipeline_script/'; [ -d $drd ] && ed=$drd #holi@scalemp1
drd='/home/holi/database/pipeline_script/'; [ -d $drd ] && ed=$drd  #My newest computer
thisfolder=`pwd`; thisfolder=$thisfolder'/'
if [ $thisfolder != $ed ] ; then
 cp -f $ed/back $ed/get $ed/symbol.txt .
fi

 #check headlines: whether 2nd row is empty
 #if [ $head -eq 0 ] ; then
 # head=`awk '{n++;if(n==2){if(NF==0){print 1}else{print 0}}}' $input`
 #fi

 #maxlength of $1
 max=`awk '{if(NR>'$head'&&length($1)>max){max=length($1)}}END{print max}' $input`
 max2=`awk '{if(NR>'$head'&&length($1)>max){max=length($1)}}END{print max}' $input2`
 [ $max2 -gt $max ] && max=$max2

 #
 cat $input | awk 'BEGIN{head='$head';max='$max';dom=0;dom2=0
  file="'$input2'";  n=0
   while ((getline line < file) > 0) {
    n++; nf=split(line,d," "); a[n]=d[1];b[n]=d[2];all[n]=line 
   }
   close(file)
 }
 {if(NR<=head||NF==0){print $_}else{
  if(tolower($1)!="consensus"){
   if(dom==0&&NF>0&&NF<=5){m=index($_,$2);dom=1}
   o=length($1);x=length($2)
   sp="";for(i=1;i<=(max-o+'$space');i++){sp=sprintf("%s ",sp)}
   printf("%s%s%s\n",$1,sp,substr($_,m,9999))
  }else{ #put 2nd file before Consensus line
   for(i=1;i<=n;i++){
    nf=split(all[i],z," ")
    if(dom2==0&&nf>0&&nf<=5){m=index(all[i],b[i]);dom2=1}
    o=length(a[i]);x=length(b[i])
    sp="";for(j=1;j<=(max-o+'$space');j++){sp=sprintf("%s ",sp)}
    printf("%s%s%s\n",a[i],sp,substr(all[i],m,9999))
   }
   print $_
  }
 }
 }' > $temp

 #sort by file
 if [ $dosort -eq 1 ] ; then
  [ $display -eq 1 ] && echo "Sort output by $sortf"
  awk 'BEGIN{c='$ncol'
   file="'$temp'";  n=0
   while ((getline line < file) > 0) {
    n++; nf=split(line,d," "); a[n]=d[1];b[n]=d[2];all[n]=line;u[n]=0
   }
   close(file)   
  }{if(substr($1,1,1)!="#"){
   for(i=1;i<=n;i++){if(tolower(a[i])==tolower($1)){print all[i];u[i]=1;break}}
  }}END{
   for(i=1;i<=n;i++){if(u[i]==0){print all[i]}}
  }' $sortf > $temp2
  mv $temp2 $temp
 fi

 if [ $display -eq 1 ] ; then
  cat $temp 
  if [ $doout -eq 1 ] ; then
   echo "Merged spaces to $space and output saved in $output"
  fi
 fi
 [ $doout -eq 1 ] && mv $temp $output

if [ "$temp" == "" ] ; then
 echo "FATAL error: temp files are NOT defined: all files in folder could be erased!!! Rewrite $0 script";exit
fi
rm -f $temp* $temp2* $temp3* $temp4* $temp5* $temp6* ; exit  #Do NOT use rm -rf will may delete subfolders

